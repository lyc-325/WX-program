<template>
<view class="root">
  <view class="container">
    <view class="head">
      <view class="value">{{title}}</view>
    </view>

    <view class="item">
      <view class="label">发布人:</view>
      <view class="value">{{createdBy}}</view>
    </view>

    <view class="item">
      <view class="label">发布时间:</view>
      <view class="value">{{createdAt}}</view>
    </view>

    <view class="item" style="border-bottom: 2rpx solid #eee;">
      <view class="label">浏览量:</view>
      <view class="value">{{read}}</view>
    </view>

    <view class="imgBar" wx:if="{{imgs.length !== 0 }}">
      <view class="image" wx:for="{{imgs}}" wx:key="{{index}}">
        <image mode="scaleToFill" src="{{item}}" />
      </view>
    </view>
    <view class="area">
      <view class="label" style="border-bottom: 2rpx solid #eee;">内容</view>
      <view class="value">{{content}}</view>
    </view>
  </view>
</view>
</template>

<style scoped>
/* board_detail.wxss */
.container {
  display: flex;
  flex-flow: column;
  width: 90%;
  margin: 0 5%;
}
.head {
  font-size: 48rpx;
  margin-bottom: 20rpx;
}
.item {
  font-size: 28rpx;
  display: flex;
  flex-flow: row;
  width: 80%;
  padding-left: 20rpx;
  padding-right: 20rpx;
  /*justify-content: space-between;*/
  margin-top: 20rpx;
}
.item .value{
  margin-left: 20rpx;
}
.imgBar {
  white-space:nowrap;
  /*display:flex;*/
  margin-top:20rpx;
  width:70%;
}
.image {
  /*display: inline-block;*/
  width: 100%;
  height: 440rpx;
  padding: 10rpx 0;
}
image {
  width: 100%;
  height: 100%;
  /*background-size: contain;*/
}
.area{
  width: 80%;
  display: flex;
  flex-flow: column;
  margin-top: 20rpx;
  margin-bottom: 50rpx;
}
.area > .label {
  font-size: 36rpx;
  margin-bottom: 16rpx;
}
.area > .value {
  font-size: 28rpx;
}
</style>

<script>
import wepy from 'wepy'
import { connect } from 'wepy-redux'
import * as api from '../apis/board'
import { jf } from '../config'

@connect({
  user(state) {
    return state.common.user
  }
})
export default class Board extends wepy.page {
  config = {
    navigationBarTitleText: '留言板'
  }

  data = {
    title: '',
    imgs: [],
    content: '',
    createdBy: '',
    createdAt: '',
    read: 200
  }
  async onLoad(option) {
    const { id } = option
    // console.log('id', id)
    const { jfToken } = this.user
    const res = await api.boardDetail(id, jfToken)
    console.log(res)
    this.title = res.title
    this.content = res.text
    this.createdBy = res.creator
    this.createdAt = res.dateline
    this.imgs = res.pic_urls.map(url => `${jf.baseServer}${url}`)
    this.$apply()
  }
}
</script>
