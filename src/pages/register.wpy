<template>
<!--register.wxml-->
<view class="form-error" wx:if="{{formError}}">{{formError}}</view>

<form @submit="submit">
  <view class="container">
    <view class="title">个人信息完善</view>
    <view class="item">
      <view class="label">公司</view>
      <view class="input">
        <input type="text" class="{{formErrorKey === 'company' ? 'error' : ''}}" name="company" @focus="bindFocus" />
      </view>
    </view>

    <view class="item">
      <view class="label">手机</view>
      <view class="input">
        <input type="text" class="{{formErrorKey === 'phone' ? 'error' : ''}}" name="phone" @focus="bindFocus" />
      </view>
    </view>

    <view class="item">
      <view class="label">邮箱</view>
      <view class="input">
        <input type="text" class="{{formErrorKey === 'email'? 'error' : ''}}" name="email" @focus="bindFocus" />
      </view>
    </view>

    <view class="item">
      <button form-type="submit" loading="{{requesting}}">提交</button>
    </view>
  </view>
</form>
</template>

<style>
.container {
  display: flex;
  flex-direction: column;
}

.container .title {
  text-align: center;
  font-size: 20px;
}

.container > .item {
  padding: 50rpx;
  display: flex;
  align-items: center;
  margin-top: 30rpx;
}

.container > .item .label {
  padding: 10rpx;
}

.container > .item input {
  border: 1px solid #eee;
}
</style>

<script>
import wepy from 'wepy'
import { connect } from 'wepy-redux'
import R from '../libs/ramda'
import NIM from '../utils/nim'
import * as api from '../apis/account'

import {
  setUser,
  setNim
} from '../actions/common'

import { validator, validateLength, validateEmail, validatePhone } from '../utils/validator'

// 校验规则配置
const rules = {
  company: {
    prompt: '公司名称在1-20字以内',
    validate: validateLength(1, 20)
  },
  email: {
    prompt: '邮箱不合法',
    validate: validateEmail
  },
  phone: {
    prompt: '电话号码不合法',
    validate: validatePhone
  }
}

const validate = validator(rules)

@connect({
  user(state) {
    return state.common.user
  }
}, {
  setUser
})
export default class Register extends wepy.page {
  config = {
    navigationBarTitleText: '注册'
  }

  data = {
    requesting: false,
    formError: null,
    formErrorKey: null
  }

  methods = {
    bindFocus(e) {
      this.formError = null
      this.formErrorKey = null
    },

    async submit(e) {
      const errorKey = validate(e.detail.value)
      const { company, phone, email } = e.detail.value
      const { setUser } = this.methods
      if (!errorKey) {
        this.requesting = true

        const { accid, nickName, avatarUrl, gender } = this.user

        const infos = {
          company,
          phone,
          email,
          gender,
          credits: 0
        }
        let token
        try {
          const resp = await NIM.create(
            accid,
            nickName,
            avatarUrl,
            infos
          )
          token = resp.token
        } catch (e) {
          if (e.code === 414) {
            const resp = await NIM.login(accid)
            token = resp.token
          }
        }

        try {
          const password = R.takeLast(5)(accid)
          const user = await api.createUser(accid, password, {
            ...infos,
            name: nickName,
            icon: avatarUrl
          })
          const { Token } = user

          setUser({
            ...this.user,
            ...user,
            jfToken: Token
          })

          setNim({
            token
          })

          wepy.reLaunch({
            url: '/pages/chatrooms'
          })
        } catch (e) {
          console.error('create user', e)
        }
      } else {
        this.formError = rules[errorKey].prompt
        this.formErrorKey = errorKey
        this.requesting = false
      }
    }
  }
}
</script>
