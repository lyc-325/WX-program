<template>
<view class="root">
  <view class="search">
    <input type="text" placeholder="搜索" confirm-type="search" @confirm="filter" @input="filter"/>
  </view>

  <view wx:if="{{notifications > 0}}" class="notification">
    <view @tap="toNotification">申请与通知</view>
    <view class="badge">{{notifications}}</view>
  </view>

  <view wx:for="{{showedFriends}}" wx:key="{{index}}" class="friend" @tap="toChat({{index}})">
    <view class="avatar">
      <image mode="scaleToFill" src="{{item.avatar}}"></image>
    </view>
    <view class="nickname">{{item.nickname}}</view>
  </view>
</view>
<view bindtap="toAdd" class="plus">+</view>
</template>

<style scoped>
.root > view {
  padding: 20rpx;
  border-bottom: 1px solid #eee;
}

.search input{
  text-align: center;
  background: white;
  font-size: 30rpx;
  border: 1px solid #eee;
}

.notification {
  display: flex;
  justify-content: space-between;
  align-items: center;
  font-size: 30rpx;
  background-color: #eee;
}

.notification .badge {
  border-radius: 50%;
  width: 50rpx;
  height: 50rpx;
  padding: 5rpx;
  line-height: 50rpx;
  color: white;
  text-align: center;
  background-color: red;
}

.friend {
  display: flex;
  align-items: center;
  font-size: 32rpx;
}

.friend .avatar {
  margin-right: 10rpx;
}

.friend .avatar image {
  width: 80rpx;
  height: 80rpx;
}

.plus {
  position: fixed;
  bottom: 10rpx;
  right: 10rpx;
  width: 80rpx;
  height: 80rpx;
  line-height: 80rpx;
  border-radius: 50%;
  text-align: center;
  background-color: #1eb571;
  color: white;
  font-size: 50rpx;
  font-weight: 700;
  box-shadow: 1px 1px 5px #ccc;
}
</style>

<script>
import wepy from 'wepy'
import { connect } from 'wepy-redux'
import NIM from '../utils/nim'
import R from '../libs/ramda'

const filter = R.curry((name, friend) => friend.nickname.includes(name))

const getFriend = friend => ({
  nickname: friend.nick,
  avatar: friend.avatar,
  accid: friend.account
})

@connect({
  user: state => state.common.user,
  nim: state => state.common.nim
})
export default class Friends extends wepy.page {
  config = {
    navigationBarTitleText: '好友'
  }

  data = {
    showedFriends: [],
    friends: [],
    notifications: 0
  }

  methods = {
    toAdd() {
      wepy.navigateTo({
        url: '/pages/add'
      })
    },
    toChat(index) {
      const friend = this.showedFriends[index]
      wepy.navigateTo({
        url: `pages/chat?faccid=${friend.accid}`
      })
    },
    toNotification() {
      wepy.navigateTo({
        url: '/pages/notifications'
      })
    },
    filter(e) {
      const value = R.trim(e.detail.value)
      this.showedFriends = this.friends.filter(filter(value))
    }
  }

  onShow() {
    // 初始化 NIM 对象用于接收系统通知
    NIM.getInstance({
      account: this.user.accid,
      token: this.nim.token,
      debug: true,
      onusers: friends => {
        this.friends = friends.map(getFriend)
        this.showedFriends = this.friends.map(R.identity)
        this.$apply()
      }
    })
  }
}
</script>
