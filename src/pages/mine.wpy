<template>
<view class="root">
  <!--<view class="base">-->
    <!--<view>-->
      <!--<view class="avatar">-->
        <!--<image mode="scaleToFill" src="{{avatar}}" />-->
      <!--</view>-->
      <!--<view class="nickname">{{nickname}}</view>-->
    <!--</view>-->
    <!--<view class="membership">{{membership}}</view>-->
  <!--</view>-->
  <view class="userinfo" @tap="handleViewTap">
    <view wx:if="{{isEdit === true}}" class="closeEdit" @tap="closeUserInfoTap">取 消</view>
    <image class="userinfo-avatar" src="{{userData.icon}}" background-size="cover"/>
    <!--<view class="userinfo-nickname">{{userData.name}}</view>-->
    <view wx:if="{{isEdit === false}}" class="infoEdit" @tap="editUserInfoTap">编 辑</view>
    <view wx:elif="{{isEdit === true}}" class="infoEdit" @tap="saveUserInfoTap">保 存</view>
  </view>
  <view class="details">
    <view class="item">
      <view class="label">姓名</view>
      <view wx:if="{{isEdit === false}}" class="value">{{userData.name}}</view>
      <input wx:elif="{{isEdit === true}}" style="border-bottom: 1px solid #eee" value="{{userData.name}}" bindinput="nameKeyInput" placeholder="姓名" >
    </view>

    <view class="item">
      <view class="label">公司</view>
      <view wx:if="{{isEdit === false}}" class="value">{{userData.company}}</view>
      <input wx:elif="{{isEdit === true}}" style="border-bottom: 1px solid #eee" value="{{userData.company}}" bindinput="companyKeyInput" placeholder="公司" >
    </view>

    <view class="item">
      <view class="label">联系方式</view>
      <view wx:if="{{isEdit === false}}" class="value">{{userData.mobile}}</view>
      <input wx:elif="{{isEdit === true}}" style="border-bottom: 1px solid #eee" value="{{userData.mobile}}" bindinput="phoneKeyInput" placeholder="联系方式" >
    </view>

    <view class="item">
      <view class="label">主要经营</view>
      <view wx:if="{{isEdit === false}}" class="value">{{userData.ex}}</view>
      <input wx:elif="{{isEdit === true}}" style="border-bottom: 1px solid #eee" value="{{userData.ex}}" bindinput="exKeyInput" placeholder="主要经营" >
    </view>

    <view class="item">
      <view class="label">职位</view>
      <view wx:if="{{isEdit === false}}" class="value">{{userData.token}}</view>
      <input wx:elif="{{isEdit === true}}" style="border-bottom: 1px solid #eee" value="{{userData.token}}" bindinput="tokenKeyInput" placeholder="职位" >
    </view>

    </view>
  </view>
</view>
  <view class="list">
    <view style="color:#6b6b6b; padding:10px;">发布列表</view>
    <view wx:for="{{list}}"   wx:key="index" data-index="{{index}}" class="item">
      <view class="cover" @tap="handleItemTap({{item.id}})">
        <image mode="scaleToFill" src="{{item.cover}}" />
      </view>
      <view class="info">
        <view class="title">
          <view>{{item.title}}</view>
          <view @tap="deleteItem({{item}},{{index}})">删除</view>
        </view>
        <view class="content" @tap="handleItemTap({{item.id}})">{{item.content}}</view>
        <view class="footer">
          <view class="createdBy">{{item.createdBy}}</view>
          <view class="createdAt">{{item.createdAt}}</view>
          <view class="read">
            {{item.read}} 阅读
          </view>
        </view>
      </view>
    </view>
  </view>
  <view @tap="handlePublishTap" loading="{{loading}}" disabled="{{disabled}}" class="publish">发布</view>
</template>

<style scoped>
.userinfo {
    display: flex;
    flex-direction: column;
    align-items: center;
  }

.userinfo-avatar {
    width: 120rpx;
    height: 120rpx;
    border-radius: 50%;
  }
.infoEdit{
  position:absolute;
  right:10%;
  padding:5px 10px;
  border:1px solid #eee;
  border-radius:10%;
  top:2%;
}
.closeEdit{
  position:absolute;
  left:10%;
  padding:5px 10px;
  border:1px solid #eee;
  border-radius:10%;
  top:2%;
}
.userinfo-nickname {
    color: #aaa;
  }
.root {
  width: 90%;
  margin: 0 5%;
  }
.root>view {
  padding: 20rpx;
  border-bottom: 1px solid #eee;
}

.base {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.base>view:first-child {
  display: flex;
  align-items: center;
}

.base .avatar {
  margin-right: 10rpx;
}

.base .avatar image {
  width: 100rpx;
  height: 100rpx;
}

.details>.item {
   display: flex;
   padding: 10rpx 0;
   justify-content: space-between;
   color: #6b6b6b;
 }

.details>.item .value {
  width: 60%;
  text-align: right;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}
.list{
  padding:0 5%;
  background-color: #fff;
}
.list>.item {
  position: relative;
  border-top: 2rpx solid #eee;
  height: 200rpx;
  display: flex;
}

.list>.item:first-child {
  border-top: none;
}

.list>.item:last-child {
  border-bottom: 2rpx solid #eee;
}

.list>.item .cover {
  width: 150rpx;
  height: 150rpx;
  padding: 30rpx;
}

.list>.item .cover image {
  width: 150rpx;
  height: 150rpx;
  border-radius: 10rpx;
}

.list>.item .info {
  width: 500rpx;
  padding: 20rpx;
  display: flex;
  flex-direction: column;
  justify-content: space-around;
}

.list>.item .info .title {
  font-size: 32rpx;
  display: flex;
  justify-content: space-between;
}

.list>.item .info .content {
  font-size: 26rpx;
  line-height: 30rpx;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  color: dimgray;
}

.list>.item .info .footer {
  display: flex;
  justify-content: space-between;
  font-size: 25rpx;
  color: darkgray;
}

.list>.item .info .footer {
  display: flex;
}

.publish {
  position: fixed;
  bottom: 20rpx;
  right: 20rpx;
  width: 180rpx;
  height: 80rpx;
  line-height: 80rpx;
  border-radius: 20rpx;
  text-align: center;
  background-color: #1eb571;
  color: white;
  font-size: 36rpx;
  font-weight: 700;
  box-shadow: 1px 1px 5px #ccc;
}
</style>

<script>
import wepy from 'wepy'
import * as api from '../apis/mine'
import { jf } from '../config'
import { connect } from 'wepy-redux'

@connect({
  user(state) {
    return state.common.user
  }
})
export default class Mine extends wepy.page {
  config = {
    navigationBarTitleText: '个人中心'
  }

  data = {
    list: [],
    userData: {
      name: '加载中...'
    },
    newUserData: {},
    levelData: '',
    isEdit: false
  }

  methods = {
    async deleteItem(item, index) {
      await api.delItem(item.id, this.user.jfToken)
      this.list.splice(index, 1)
      this.$apply()
    },
    nameKeyInput(e) {
      this.setData({
        [`userData.name`]: e.detail.value
      })
      this.userData.name = e.detail.value
      this.$apply()
    },
    companyKeyInput(e) {
      this.setData({
        [`userData.company`]: e.detail.value
      })
      this.userData.company = e.detail.value
      this.$apply()
    },
    phoneKeyInput(e) {
      this.setData({
        [`userData.phone`]: e.detail.value
      })
      this.userData.phone = e.detail.value
      this.$apply()
    },
    tokenKeyInput(e) {
      this.setData({
        [`userData.token`]: e.detail.value
      })
      this.userData.token = e.detail.value
      this.$apply()
    },
    exKeyInput(e) {
      this.setData({
        [`userData.ex`]: e.detail.value
      })
      this.userData.ex = e.detail.value
      this.$apply()
    },
    editUserInfoTap(e) {
      this.isEdit = true
    },
    closeUserInfoTap() {
      this.isEdit = false
      this.userData = this.user.userData
      this.$apply()
    },
    async saveUserInfoTap(e) {
      this.isEdit = false
      const { id } = this.userData
      const { accid } = this.userData
      var postData = {
        name: this.userData.name,
        company: this.userData.company,
        phone: this.userData.phone,
        token: this.userData.token,
        ex: this.userData.ex
      }
      await api.changeYXName(accid, postData.name)
      await api.modifyUserInfo(id, postData)
      this.$apply()
    },
    handlePublishTap(e) {
      wepy.navigateTo({
        url: 'publish'
      })
    },
    handleItemTap(Id) {
      const id = Id
      wepy.navigateTo({
        url: `board?id=${id}`
      })
    }
  }
  onShareAppMessage =  function (res) {
    return {
      title: this.userData.name+'的个人名片',
    }
  }
  async onShow() {
    await wepy.showShareMenu({
      withShareTicket: true
    })
    if (this.user.userData) {
      // console.log('this.user', this.user)
      this.userData = this.user.userData
      const res = await api.getMsgList(this.user.userData.id)
      this.list = res.map(item => ({
        id: item.id,
        title: item.title,
        content: item.text,
        createdBy: item.author.name,
        createdAt: item.dateline,
        cover: item.pic_urls[0] ? `${jf.baseServer}${item.pic_urls[0]}` : '',
        read: item.click_num
      }))
      this.$apply()
    } else {
      wepy.reLaunch({
        url: '/pages/register'
      })
    }
  }
}
</script>
