<template>
	<view class="header" style="width:100%;position:fixed;z-index:101;font-size:35rpx; line-height:60rpx;">
		<view class="navbar">
			<view @tap="changeNav" wx:for="{{navs}}" wx:key="index" data-index="{{index}}" class="item {{currentNav == index ? 'active' : ''}}">
				{{item}}
			</view>
		</view>
	</view>
	<view wx:if="{{currentNav === 0}}">
		<view class="mainTitle">收藏名片</view>
		<view class="list" style="margin-top: 10rpx;">
			<view wx:if="{{list1.length > 0}}"wx:for="{{list1}}" class="item" @tap="handleNameId({{item}})">
				<view class="cover">
					<image mode="scaleToFill" src="{{item.cover}}"/>
				</view>
				<view style="padding-top: 26rpx">
					<view class="title">{{item.name}}</view>
					<view class="content">{{item.company}}</view>
				</view>
			</view>
			<view wx:if="{{list1.length === 0}}"  class="item">
				<view style="text-align: center; margin-top: 80rpx; color: #545a63; width: 100%;">当前没有关注人员</view>
			</view>
		</view>
	</view>
	<view wx:if="{{currentNav === 1}}">
		<view class="mainTitle">收藏文章</view>
		<view class="list" style="margin-top: 10rpx;">
			<view wx:if="{{list2.length > 0}}"wx:for="{{list2}}" @tap="handleItemTap" wx:key="index" data-index="{{index}}" class="item">
				<view class="cover">
					<image mode="scaleToFill" src="{{item.cover}}"/>
				</view>
				<view class="info">
					<view class="title">{{item.title}}</view>
					<view class="content">{{item.content}}</view>
					<view class="footer">
						<view class="createdBy">{{item.createdBy}}</view>
						<view class="createdAt">{{item.createdAt}}</view>
						<view class="read">
							{{item.read}} 阅读
						</view>
					</view>
				</view>
			</view>
			<view wx:if="{{list2.length === 0}}"  class="item">
				<view style="text-align: center; margin-top: 80rpx; color: #545a63; width: 100%;">当前没有收藏信息</view>
			</view>
		</view>
	</view>
</template>
<style scoped>
::-webkit-scrollbar {
	width: 0;
	height: 0;
	color: transparent;
}
.mainTitle{
	margin:10rpx 0 10rpx 10rpx;
}
.list{
	padding-left: 20rpx;
	padding-right: 20rpx;
	background-color: #fff;
}
.list>.item {
	position: relative;
	border-top: 2rpx solid #eee;
	height: 200rpx;
	display: flex;
}
.list>.item:first-child {
	border-top: none;
}
.searchInput{
	display:block;
	height: 2rem;
	text-overflow:clip;
	overflow:hidden;
	white-space:nowrap;
	font-family:UICTFontTextStyleBody;
	min-height: 2rem;
	border-bottom:1px solid #eee;
}
.list>.item:last-child {
	border-bottom: 2rpx solid #eee;
}
.list>.item .cover {
	width: 150rpx;
	height: 150rpx;
	padding: 30rpx;
}
.list>.item .cover image {
	width: 150rpx;
	height: 150rpx;
	border-radius: 10rpx;
}
.list>.item .info {
	width: 500rpx;
	padding: 20rpx;
	display: flex;
	flex-direction: column;
	justify-content: space-around;
}
.list>.item .info .title {
	width: 100%;
	font-size: 32rpx;
}
.list>.item .info .content {
	font-size: 26rpx;
	line-height: 30rpx;
	overflow: hidden;
	white-space: nowrap;
	text-overflow: ellipsis;
	display: -webkit-box;
	-webkit-line-clamp: 2;
	-webkit-box-orient: vertical;
	color: dimgray;
}
.list>.item .info .footer {
	display: flex;
	justify-content: space-between;
	font-size: 25rpx;
	color: darkgray;
}
.list>.item .info .footer {
	display: flex;
}
</style>
<script>
import wepy from 'wepy'
import { connect } from 'wepy-redux'
import * as api from '../apis/account'
import { jf } from '../config'

@connect({
	user(state) {
		return state.common.user
	}
})
export default class collection extends wepy.page {
	config = {
		navigationBarTitleText: '我的收藏'
	}
	data = {
		list1: [],
		list2: [],
		boardId: '',
		navs: ['名片', '文章'],
		currentNav: 0,
	}
	methods = {
		changeNav (e) {
			this.currentNav = e.currentTarget.dataset.index
			this.sended = false
			this.$apply()
		},
		handleItemTap(e) {
			const id = this.list2[e.currentTarget.dataset.index].id
			wepy.navigateTo({
				url: `board?id=${id}`
			})
		},
		handleNameId (item) {
			const itemid = item.id
			wepy.navigateTo({
				url: `userInfo?id=${itemid}`
			})
		},
	}
	async onShow() {
		let self = this
		if (this.user.userData) {
			let {id} = this.user.userData
			const userRes = await api.getStarUserList(id)
			const boardRes = await api.getStarArticleList(id)
			this.list1 = userRes.map(item => ({
				id: item.followed.id,
				cover: item.followed.icon,
				name: item.followed.name,
				company: item.followed.company
			}))	
			this.list2 = boardRes.map(item => ({
				id: item.article.id,
				title: item.article.title,
				content: item.article.text,
				createdBy: item.article.author,
				createdAt: item.article.dateline,
				cover: item.article.pic_urls[0] ? `${jf.baseServer}${item.article.pic_urls[0]}` : '',
				read: item.article.click_num
			}))
			this.$apply()
		} else {
			wepy.reLaunch({
				url: '/pages/register'
			})
		}
	}
}
</script>